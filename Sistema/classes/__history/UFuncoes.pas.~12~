unit UFuncoes;



interface


uses
Vcl.Forms, System.SysUtils, System.Classes, Data.DB, Data.SqlExpr,
  Vcl.DBGrids, Vcl.Grids, System.Types, System.Generics.Collections;

function GetId(Campo, Tabela : String) : Integer;
function GetLoginCadastrado(Login : String) : Boolean;
procedure EditarDBGrid(DataSource : TDataSource; Sender : TDBGrid; State : TGridDrawState; Rect : TRect; Column : TColumn);
implementation

uses ModConexao, ufrmCadastroUsuarios;

function GetId(Campo, Tabela : String) : Integer;
   begin
     with
     TSQLQuery.Create(nil) do
     try
       SQLConnection := dmDados.SQLConnection;
       sql.Add('SELECT '+Campo+' FROM '+Tabela+' ORDER BY '+Campo+' DESC LIMIT 1');
       open;
       Result := Fields[0].AsInteger + 1;
     finally
        close;
        free;
     end;
   end;

   function GetLoginCadastrado(Login : String) : Boolean;
   begin
   result := false;
        with
        TSQLQuery.Create(nil) do

        try
        SQLConnection := DmDados.SQLConnection;
        Sql.Add('SELECT ID FROM USUARIOS WHERE LOGIN = :LOGIN');
        Params[0].AsString := Login;
        Open;

        if not IsEmpty then
             result := true;
             finally
             Close;
             Free;

     end;
       end;

       procedure EditarDBGrid(DataSource : TDataSource; Sender : TDBGrid; State : TGridDrawState; Rect : TRect; Column : TColumn);
       begin
         if not odd(DataSource.DataSet.RecNo) then
          begin
            if not (gdSelected in state) then
            begin
              Sender.Canvas.Brush.Color := $00FFEFDF;
              Sender.Canvas.FillRect(Rect);
              Sender.DefaultDrawDataCell(Rect,Column.Field,State);
            end;
          end;
       end;

end.
